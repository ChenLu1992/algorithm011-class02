/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */

//µÝ¹é
struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){

       if(!l1){
           return l2;
       }

       if(!l2){
           return l1;
       }

       if(l1->val > l2->val){
           l2->next = mergeTwoLists(l2->next, l1);
           return l2;
       }
       else{
           l1->next = mergeTwoLists(l1->next, l2);
           return l1;
       }

}

//Ñ­»·
/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     struct ListNode *next;
 * };
 */


struct ListNode* mergeTwoLists(struct ListNode* l1, struct ListNode* l2){

       if(!l1){
           return l2;
       }

       if(!l2){
           return l1;
       }

       struct ListNode *t;
       struct ListNode *result = (struct ListNode *)malloc(sizeof(struct ListNode));

       t = result;

       while (l1 && l2){
            if (l1->val < l2->val){
                t->next = l1;
                l1 = l1->next;
            }			
            else{
                t->next = l2;
                l2 = l2->next;
            }			
            t = t->next;		
	    }

       if(l1){
           t->next = l1;
       }

       if(l2){
           t->next = l2;
       }

    return result->next;
}


